{"version":3,"file":"index.js","sources":["../../server/src/utils/plugin-id.ts","../../server/src/utils/get-service.ts","../../server/src/register.ts","../../__vite-browser-external","../../server/src/controllers/editorjs.ts","../../server/src/controllers/index.ts","../../server/src/config.ts","../../server/src/routes/index.ts","../../server/src/services/plugin.ts","../../server/src/services/index.ts","../../server/src/index.ts"],"sourcesContent":["const pluginId = \"editorjs\";\n\nexport default pluginId;\n","\"use strict\";\n\nimport pluginId from \"./plugin-id\";\n\nconst getService = (strapi) => strapi.plugin(pluginId).service(\"plugin\");\n\nexport default getService;\n","import { Strapi } from \"@strapi/strapi\";\n\nimport { pluginId } from \"./utils\";\n\nexport const register = ({ strapi }: { strapi: Strapi }) => {\n  strapi.customFields.register({\n    name: pluginId,\n    pluginId: pluginId,\n    type: \"richtext\",\n  });\n};\n","export default {}","import { Context } from \"@strapi/utils/dist/types\";\nimport { Strapi } from \"@strapi/strapi\";\nimport ogs, { SuccessResult } from \"open-graph-scraper\";\nimport { parseMultipartData } from \"@strapi/utils\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { LocalFileData } from \"get-file-object-from-local-path\";\nimport { getService } from \"../utils\";\nimport { StrapiRequestContext } from \"strapi-typed\";\n\ninterface CustomSuccessResult extends SuccessResult {\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: {\n    url: string;\n  };\n}\n\nexport default ({ strapi }: { strapi: Strapi }) => ({\n  config: async (ctx: StrapiRequestContext<never, any>) => {\n    const config = await getService(\"plugin\").getConfig();\n    ctx.send(config);\n  },\n\n  link: async (ctx: StrapiRequestContext<never, any>) => {\n    const result = await new Promise<{ success: number; meta: any }>(\n      (resolve) => {\n        ogs(ctx.query, (error, results: CustomSuccessResult, response) => {\n          // Проверяем, существует ли свойство 'ogImage' в результатах\n          const imageUrl = results?.ogImage?.url\n            ? { url: results.ogImage.url }\n            : undefined;\n\n          resolve({\n            success: 1,\n            meta: {\n              title: results?.ogTitle,\n              description: results?.ogDescription,\n              image: imageUrl,\n            },\n          });\n        });\n      }\n    );\n\n    ctx.send(result);\n  },\n\n  byFile: async (ctx: Context & StrapiRequestContext<never, any>) => {\n    try {\n      const { files } = parseMultipartData(ctx);\n\n      const [uploadedFile] = await strapi\n        .plugin(\"upload\")\n        .service(\"upload\")\n        .upload({\n          data: {},\n          files: Object.values(files),\n        });\n\n      ctx.send({\n        success: 1,\n        file: uploadedFile,\n      });\n    } catch (e) {\n      ctx.send(\n        {\n          success: 0,\n          message: e.message,\n        },\n        500\n      );\n    }\n  },\n\n  byURL: async (ctx: StrapiRequestContext<never, any>) => {\n    try {\n      const { url } = ctx.request.body;\n      const { name, ext } = path.parse(url);\n      const filePath = `./public/${name}${ext}`;\n\n      const response = await axios.get(url, { responseType: \"arraybuffer\" });\n      const buffer = Buffer.from(response.data, \"binary\");\n\n      await fs.promises.writeFile(filePath, buffer);\n\n      const fileData = new LocalFileData(filePath);\n\n      const file = {\n        path: filePath,\n        name: fileData.name,\n        type: fileData.type,\n        size: Buffer.byteLength(buffer),\n      };\n\n      const [uploadedFile] = await strapi\n        .plugin(\"upload\")\n        .service(\"upload\")\n        .upload({\n          data: {},\n          files: file,\n        });\n\n      await fs.promises.unlink(filePath);\n\n      ctx.send({\n        success: 1,\n        file: uploadedFile,\n      });\n    } catch (e) {\n      ctx.send(\n        {\n          success: 0,\n          message: e.message,\n        },\n        500\n      );\n    }\n  },\n});\n","import upload from \"./editorjs\";\n\nexport default {\n  editorjs: upload,\n};\n","export default {\n  default: {\n    header: null,\n    list: null,\n    checklist: null,\n    embed: null,\n    table: null,\n    warning: null,\n    code: null,\n    link_tool: null,\n    raw: null,\n    quote: null,\n    marker: null,\n    delimiter: null,\n    inlineCode: null,\n    image: null,\n    attaches: null,\n    component: null,\n    minHeight: null,\n  },\n};\n","\"use strict\";\n\nexport default {\n  editorjs: {\n    type: \"admin\",\n    routes: [\n      {\n        method: \"GET\",\n        path: \"/config\",\n        handler: \"editorjs.config\",\n        config: {\n          policies: [\"admin::isAuthenticatedAdmin\"],\n        },\n      },\n    ],\n  },\n  \"content-api\": {\n    type: \"content-api\",\n    routes: [\n      {\n        method: \"GET\",\n        path: \"/link\",\n        handler: \"editorjs.link\",\n        config: {\n          description: \"Get a URL link\",\n          auth: false,\n        },\n      },\n      {\n        method: \"POST\",\n        path: \"/image/byFile\",\n        handler: \"editorjs.byFile\",\n        config: {\n          auth: false,\n        },\n      },\n      {\n        method: \"POST\",\n        path: \"/image/byUrl\",\n        handler: \"editorjs.byURL\",\n        config: {\n          auth: false,\n        },\n      },\n    ],\n  },\n};\n","\"use strict\";\n\nimport { Strapi } from \"@strapi/strapi\";\n\nimport config from \"../config\";\nimport { pluginId } from \"../utils\";\n\nexport default ({ strapi }: { strapi: Strapi }) => ({\n  async getConfig() {\n    const data = await strapi.config.get(`plugin.${pluginId}`, config.default);\n\n    return data;\n  },\n});\n","\"use strict\";\n\nimport plugin from \"./plugin\";\n\nexport default {\n  plugin,\n};\n","\"use strict\";\n\nimport { register } from \"./register\";\nimport controllers from \"./controllers\";\nimport config from \"./config\";\nimport routes from \"./routes\";\nimport services from \"./services\";\n\nexport default {\n  register,\n  config,\n  routes,\n  controllers,\n  services,\n};\n"],"names":["pluginId","getService","strapi","register","fs","upload","ctx","config","result","resolve","ogs","error","results","response","imageUrl","_a","files","parseMultipartData","uploadedFile","e","url","name","ext","path","filePath","axios","buffer","fileData","LocalFileData","file","controllers","routes","plugin","services","index"],"mappings":"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"}